generator client {
  provider = "prisma-client-js"
  //output   = "../app/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  email     String?    @unique
  password  String?
  bio       String?
  phone     String?    @unique
  github_id String?    @unique
  avatar    String?
  create_at DateTime   @default(now())
  update_at DateTime   @updatedAt
  SMSToken  SMSToken[]
  Tweet     Tweet[]
  Like      Like[]
  Product   Product[]
  Comment   Comment[]
}

model Tweet {
  id        Int       @id @default(autoincrement())
  tweet     String
  views     Int       @default(0)
  create_at DateTime  @default(now())
  update_at DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  Like      Like[]
  Comment   Comment[]
}

model Like {
  create_at DateTime @default(now())
  update_at DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  tweet     Tweet    @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId   Int

  @@id(name: "id", [userId, tweetId])
}

model SMSToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  create_at DateTime @default(now())
  update_at DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String
  price       Float
  description String
  photo       String
  create_at   DateTime @default(now())
  update_at   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
}

model Comment {
  id        Int      @id @default(autoincrement())
  payload   String
  create_at DateTime @default(now())
  update_at DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  tweet     Tweet    @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId   Int
}
